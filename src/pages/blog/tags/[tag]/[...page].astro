---
import Pagination from "@/components/Paginator.astro";
import PostPreview from "@/components/blog/PostPreview.astro";
import { getAllPosts, getUniqueTags } from "@/data/post";
import PageLayout from "@/layouts/Base.astro";
import { collectionDateSort } from "@/utils/date";

export const getStaticPaths = async ({ paginate }) => {
  const allPosts = await getAllPosts();
  const sortedPosts = allPosts.sort(collectionDateSort);
  const uniqueTags = getUniqueTags(sortedPosts);

  return uniqueTags.flatMap((tag) => {
    const filterPosts = sortedPosts.filter((post) => post.data.tags.includes(tag));
    return paginate(filterPosts, {
      pageSize: 100,
      params: { tag },
    });
  });
};

const { page } = Astro.props;
const { tag } = Astro.params;

const meta = {
  description: `檢視所有含有 ${tag} 標籤的文章`,
  title: `Tag: ${tag}`,
};

const paginationProps = {
  ...(page.url.prev && {
    prevUrl: {
      text: `← Previous Tags`,
      url: page.url.prev,
    },
  }),
  ...(page.url.next && {
    nextUrl: {
      text: `Next Tags →`,
      url: page.url.next,
    },
  }),
};
---

<PageLayout meta={meta}>
  <h1 class="title mb-6 flex items-center">
    <a class="text-accent sm:hover:underline" href="/blog/tags/">Tags</a>
    <span class="me-3 ms-2">→</span>
    <span class="text-xl">#{tag}</span>
  </h1>
  <section aria-label="Blog post list">
    <ul class="space-y-4">
      {
        page.data.map((p) => (
          <li class="grid gap-2 sm:grid-cols-[auto_1fr]">
            <PostPreview as="h2" post={p} />
          </li>
        ))
      }
    </ul>
    <Pagination {...paginationProps} />
  </section>
</PageLayout>
